   public Node copyRandomList(Node head) {
            if(head == null) return null;
        
        // TC - O(n) SC - O(1)
//         HashMap<Node, Node> map = new HashMap<>();
        
//         Node temp = head;
        
//         while(temp!=null) {
//             Node newNode = new Node(temp.val);
//             map.put(temp, newNode);
//             temp = temp.next;
//         }
        
//         temp = head;
//         while(temp!=null) {
//             Node curr = map.get(temp);
//             curr.next = map.get(temp.next);
//             curr.random = map.get(temp.random);
//             temp = temp.next;
//         }
        
//         return map.get(head);
        
        // TC - O(n) SC - O(1)
        
        Node temp = head; 
        Node next = temp;
        while(temp!=null) {
            next = temp.next;
            
            Node newNode = new Node(temp.val);
            temp.next = newNode;
            newNode.next = next;
            temp = next;
            
        }
        
        temp = head;
         
        while(temp!=null) {
            if(temp.random !=null)
            temp.next.random = temp.random.next;
            temp = temp.next.next;
            
        }
        temp = head;
        Node newHead = head.next;
        Node newnext = newHead;
        
        while(temp!=null) {
            
            temp.next = temp.next.next;
            temp = temp.next;
            if(temp!=null) {
                  newnext.next = temp.next;
            
                 newnext = newnext.next;
            }
          
           
            
        }
        
   
        return newHead;
        
        
        
    }
