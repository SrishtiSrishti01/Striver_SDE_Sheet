    public boolean isPalindrome(ListNode head) {
        
//         Stack<Integer> stack = new Stack<Integer>();
//         ListNode temp = head;

//         while(temp!=null) {
//             stack.push(temp.val);
//             temp = temp.next;
//         }

//         temp = head;
//         while(temp!=null) {
//             if(stack.pop()!=temp.val) 
//                 return false;
//             temp=temp.next;
//         }
//         return true;
        
        ListNode slow = head;
        ListNode fast = head;
        Stack<Integer> stack = new Stack<Integer>();
        while(fast!=null && fast.next!=null) {
            stack.push(slow.val);
            slow = slow.next;
            fast = fast.next.next;
        }
        
        if(fast!=null && fast.next==null) slow = slow.next;
        
        while(slow!=null) {
            if(stack.pop()!=slow.val) return false;
            slow=slow.next;
        }
        
        return true;
        
        
    }
